server:
  port: ${SERVER_PORT}
#  ssl:
#    certificate: classpath:${CERTIFICATE_FILENAME}
#    certificate-private-key: classpath:${CERTIFICATE_PRIVATE_KEY_FILENAME}
#    enabled: true
  http:
    port: ${HTTP_PORT}
  tomcat:
    max-swallow-size: ${MAX_UPLOAD_SIZE:20MB}

spring:
  profiles:
    active: run
  ai:
    openai:
      api-key: ${SPRING_AI_OPENAI_API_KEY}
  servlet:
    multipart:
      enabled: true
      max-file-size: ${MAX_UPLOAD_SIZE}
      max-request-size: ${MAX_UPLOAD_SIZE}
  application:
    name: timetable-oauth
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create
#      ddl-auto: update
#      ddl-auto: none
    properties:
      hibernate:
        generate_statistics: true
        format_sql: true
    show-sql: true
  datasource:
    url: jdbc:postgresql://localhost:5432/db_vector_store
    username: ai_dev_admin
    password: ai_dev_admin
  sql:
    init:
      mode: always
#  datasource:
#    url: jdbc:h2:mem:myDb
#    username: ${DB_USER}
#    password: ${DB_PASSWORD}
#    driver-class-name: org.h2.Driver
#  h2:
#    console:
#      enabled: true
#      path: /h2-console
  data:
    jpa:
      repositories:
        bootstrap-mode: default
#  datasource:
#    url: jdbc:mariadb://${DB_SOURCE}:${DB_PORT}/${DB_NAME}
#    username: ${DB_USER}
#    password: ${DB_PASSWORD}
#    driver-class-name: org.mariadb.jdbc.Driver
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: ${KEYCLOAK_SCHEME}://${KEYCLOAK_AUTH_SERVER}:${KEYCLOAK_AUTH_PORT}/realms/${REALM_NAME}
#          jwk-set-uri: ${KEYCLOAK_AUTH_SERVER}:${KEYCLOAK_AUTH_PORT}/realms/${REALM_NAME}/protocol/openid-connect/certs

log:
  project: ${LOG_LEVEL:INFO}
  spring: ${SPRING_LOG_LEVEL:INFO}

logging:
  level:
    org:
      hibernate:
        stat: debug
        type: trace

#timetable-config:
#  keycloakScheme: ${KEYCLOAK_SCHEME}
#  keycloakAuthServer: ${KEYCLOAK_AUTH_SERVER}
#  keycloakAuthPort: ${KEYCLOAK_AUTH_PORT}
#  keycloakRealmName: ${REALM_NAME}
#  keycloakPublicKey: ${KEYCLOAK_PUBLIC_KEY}
#  keycloakClientId: ${KEYCLOAK_CLIENT_ID}
#  keycloakClientSecret: ${KEYCLOAK_CLIENT_SECRET}

social-config:
  myAccessToken: ${MY_ACCESS_TOKEN}
  myAccessSecret: ${MY_ACCESS_SECRET}
  apiKey: ${API_KEY}
  apiSecret: ${API_SECRET}
  bearerToken: ${BEARER_TOKEN}

  clientId: ${CLIENT_ID}
  clientSecret: ${CLIENT_SECRET}
  localUploadPath: ${LOCAL_UPLOAD_PATH} #(Include trailing slash) Also update Dockerfile

  adminClientId: ${ADMIN_CLIENT_ID}
  adminClientSecret: ${ADMIN_CLIENT_SECRET}

  openAiToken: ${OPENAI_TOKEN}
  openAiAPIWaitingTimeInMilliSeconds: ${OPENAI_API_WAITING_TIME_IN_MILLISECONDS}
  openAiAPIWaitingNbResponseRetrieval: ${OPENAI_API_WAITING_NB_RESPONSE_RETRIEVAL}
  openAiClassicAssistantModel: ${OPENAI_CLASSIC_ASSISTANT_MODEL}
  openAiRHAssistantId: ${OPENAI_RH_ASSISTANT_ID}
  openAiRoleName: ${OPENAI_ROLE_NAME}
  openAiRoleId: ${OPENAI_ROLE_ID}

